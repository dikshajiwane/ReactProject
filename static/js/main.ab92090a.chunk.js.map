{"version":3,"sources":["Context.js","Components/Contact/Contact.js","Components/Contact/Contacts.js","Components/Layout/TextInputGroup.js","Components/Contact/AddContacts.js","Components/Contact/EditContact.js","Components/Layout/Header.js","Components/Pages/About.js","Components/Pages/NotFound.js","Components/Tests/test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","console","log","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","nextProps","nextState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showInfo","onShowClick","e","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","Contacts","Fragment","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","onEleChange","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updateContact","match","params","put","Header","branding","href","Test","title","body","fetch","then","response","json","App","exact","path","component","About","NotFound","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.ab92090a.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport axios from 'axios'\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\nconsole.log(\"hello\");\r\n    switch(action.type){\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact=>contact.id !== action.payload)\r\n            }\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            }\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id===action.payload.id ? action.payload : contact)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport class Provider extends Component{\r\n    state = {\r\n    contacts: [],\r\n    dispatch: action => {\r\n        this.setState(state => reducer(state, action))\r\n        }\r\n    }\r\n\r\n    async componentDidMount(nextProps, nextState){\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n    this.setState({contacts: res.data})\r\n    }\r\n\r\n    render(){\r\n        return(\r\n        <Context.Provider value={this.state}>\r\n            {this.props.children}\r\n        </Context.Provider>)\r\n    }\r\n\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Consumer} from '../../Context.js'\r\nimport axios from 'axios'\r\nimport {Link} from 'react-router-dom'\r\n\r\nclass Contact extends Component{\r\n    state = {\r\n        showInfo: true\r\n    };\r\n    onShowClick = e => {\r\n            this.setState({showInfo: !this.state.showInfo});\r\n        };\r\n    onDeleteClick = async (id, dispatch) => {\r\n      try{\r\n        await axios.delete('https://jsonplaceholder.typicode.com/users/'+id);\r\n        dispatch({type: 'DELETE_CONTACT', payload: id});\r\n      }catch(e){\r\n        dispatch({type: 'DELETE_CONTACT', payload: id});\r\n      }\r\n\r\n    };\r\n\r\n    render(){\r\n        const {id, name, email, phone} = this.props.contact;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                        <h4>{name}\r\n                         <i className=\"fas fa-sort-down\" onClick={this.onShowClick}/>\r\n                         <i className=\"fas fa-times\" style={{cursor: \"pointer\", float:\"right\", color:\"red\"}}\r\n                         onClick={this.onDeleteClick.bind(this, id, dispatch)}/>\r\n                         <Link to={`contact/edit/${id}`}> <i className=\"fas fa-pencil-alt\"/></Link>\r\n                         </h4>\r\n                            {this.state.showInfo ?\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Email: {email}</li>\r\n                                    <li className=\"list-group-item\">Phone: {phone}</li>\r\n                                </ul>:null }\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\nexport default Contact","import React, {Component} from 'react';\r\nimport Contact from './Contact.js';\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from 'react-responsive-carousel';\r\nimport {Consumer} from '../../Context.js'\r\n\r\nclass Contacts extends Component {\r\n    render(){\r\n        return(\r\n            <Consumer>\r\n             {value => {\r\n                const {contacts} = value;\r\n                return (\r\n                     <React.Fragment>\r\n                         <h1 className='dispaly-4 mb-2'><span className=\"text-danger\">Contact List</span></h1>\r\n                         {contacts.map(contact =>\r\n                         (<Contact key={contact.id} contact={contact}/>))}\r\n                     </React.Fragment>\r\n                )}\r\n             }\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\nexport default Contacts","import React, {Component} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\n\r\nconst TextInputGroup = ({name, label, type, value, placeholder, onChange, error}) => {\r\n    return(\r\n        <div className='form-group'>\r\n            <label htmlFor={name}>{label}</label>\r\n            <input type={type} name={name} value={value} className={classnames('form-control form-control-lg', {'is-invalid':error})}\r\n             placeholder={placeholder} onChange={onChange}/>\r\n             {error && <div className='invalid-feedback'>{error}</div>}\r\n        </div>\r\n    );\r\n};\r\nTextInputGroup.propTypes = {\r\nname: PropTypes.string.isRequired,\r\nlabel: PropTypes.string.isRequired,\r\ntype: PropTypes.string.isRequired,\r\nvalue: PropTypes.string.isRequired,\r\nplaceholder: PropTypes.string.isRequired,\r\nonChange: PropTypes.func\r\n}\r\nexport default TextInputGroup","import React, {Component} from 'react'\r\nimport {Consumer} from '../../Context'\r\nimport {v1 as uuid} from 'uuid'\r\nimport TextInputGroup from '../Layout/TextInputGroup'\r\nimport axios from 'axios'\r\n\r\nclass AddContact extends Component{\r\n    state = {\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors: {}\r\n    }\r\n\r\n    onEleChange = e => this.setState({[e.target.name]: e.target.value});\r\n    onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n        if(this.state.name===\"\"){\r\n            this.setState({'errors': {name: \"name is required\"}})\r\n            return;\r\n        }\r\n        if(this.state.email===\"\"){\r\n            this.setState({'errors': {email: \"email is required\"}})\r\n            return;\r\n        }\r\n        if(this.state.phone===\"\"){\r\n            this.setState({'errors': {phone: \"phone is required\"}})\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n        name:this.state.name,\r\n        email:this.state.email,\r\n        phone:this.state.phone\r\n        }\r\n\r\n        let res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n        dispatch({type:\"ADD_CONTACT\", payload:res.data});\r\n\r\n        //clear the state\r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n        })\r\n        this.props.history.push('/')\r\n    }\r\n    render(){\r\n\r\n        return(\r\n            <Consumer>\r\n                {value =>{\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className='card'>\r\n                            <div className=\"card-header\">Add Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup name='name' type=\"text\" label='Name' value={this.state.name}\r\n                                    placeholder='Enter Name' onChange={this.onEleChange} error={this.state.errors.name}/>\r\n                                    <TextInputGroup name='email' type=\"email\" label='Email' value={this.state.email}\r\n                                    placeholder='Enter Email' onChange={this.onEleChange} error={this.state.errors.email}/>\r\n                                    <TextInputGroup name='phone' type=\"text\" label='Phone' value={this.state.phone}\r\n                                    placeholder='Enter Phone' onChange={this.onEleChange} error={this.state.errors.phone}/>\r\n                                    <input type='submit' value='Add Contact' className='btn btn-light btn-block'/>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                    }\r\n                }\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddContact","import React, {Component} from 'react'\r\nimport {Consumer} from '../../Context'\r\nimport {v1 as uuid} from 'uuid'\r\nimport TextInputGroup from '../Layout/TextInputGroup'\r\nimport axios from 'axios'\r\n\r\nclass EditContact extends Component{\r\n    state = {\r\n        name:'',\r\n        email:'',\r\n        phone:'',\r\n        errors: {}\r\n    }\r\n\r\n    async componentDidMount(){\r\n      const {id} = this.props.match.params;\r\n      const res = await axios.get('https://jsonplaceholder.typicode.com/users/'+id);\r\n      this.setState({\r\n        name:res.data.name,\r\n        email:res.data.email,\r\n        phone:res.data.phone,\r\n      })\r\n\r\n    }\r\n    onEleChange = e => this.setState({[e.target.name]: e.target.value});\r\n    onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n        if(this.state.name===\"\"){\r\n            this.setState({'errors': {name: \"name is required\"}})\r\n            return;\r\n        }\r\n        if(this.state.email===\"\"){\r\n            this.setState({'errors': {email: \"email is required\"}})\r\n            return;\r\n        }\r\n        if(this.state.phone===\"\"){\r\n            this.setState({'errors': {phone: \"phone is required\"}})\r\n            return;\r\n        }\r\n\r\n        const updateContact = {\r\n        name:this.state.name,\r\n        email:this.state.email,\r\n        phone:this.state.phone\r\n        }\r\n\r\n        const id = this.props.match.params.id\r\n        let res = await axios.put('https://jsonplaceholder.typicode.com/users/'+id, updateContact);\r\n        dispatch({type:\"UPDATE_CONTACT\", payload:res.data});\r\n\r\n        //clear the state\r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n        })\r\n        this.props.history.push('/')\r\n    }\r\n    render(){\r\n\r\n        return(\r\n            <Consumer>\r\n                {value =>{\r\n                    const {dispatch} = value;\r\n                    return (\r\n                        <div className='card'>\r\n                            <div className=\"card-header\">Edit Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup name='name' type=\"text\" label='Name' value={this.state.name}\r\n                                    placeholder='Enter Name' onChange={this.onEleChange} error={this.state.errors.name}/>\r\n                                    <TextInputGroup name='email' type=\"email\" label='Email' value={this.state.email}\r\n                                    placeholder='Enter Email' onChange={this.onEleChange} error={this.state.errors.email}/>\r\n                                    <TextInputGroup name='phone' type=\"text\" label='Phone' value={this.state.phone}\r\n                                    placeholder='Enter Phone' onChange={this.onEleChange} error={this.state.errors.phone}/>\r\n                                    <input type='submit' value='Edit Contact' className='btn btn-light btn-block'/>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                    }\r\n                }\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditContact","import React, {Component} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\nconst Header = props => {\r\n    const {branding} = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm bg-danger navbar-dark mb-3 py-0\">\r\n            <div className=\"container\">\r\n\r\n            <h1><a href=\"/\" className=\"navbar-brand\">{branding}</a></h1>\r\n            </div>\r\n            <div>\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\" className='nav-link'><i className='fas fa-home'/>Home</Link>\r\n                    </li>\r\n                    <li className=\"navbar-item\">\r\n                        <Link to=\"/about\" className='nav-link'><i className='fas fa-question'/>About Us</Link>\r\n                    </li>\r\n                    <li className=\"navbar-item\">\r\n                        <Link to=\"/contact/add\" className='nav-link'><i className='fas fa-plus'/>Add Contact</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Header","import React, {Component} from 'react'\r\n\r\nexport default () => {\r\n    return(\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple App to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}","import React, {Component} from 'react'\r\n\r\nexport default () => {\r\n    return(\r\n        <div>\r\n            <h1 className='display-4'>404, Page Not Fund</h1>\r\n            <p className=\"lead\">Sorry that page not found</p>\r\n        </div>\r\n    )\r\n}","import React, {Component} from 'react'\r\n\r\nclass Test extends Component {\r\n    state = {\r\n    title: '',\r\n    body: ''\r\n    }\r\n    componentDidMount(nextProps, nextState){\r\n        fetch('https://jsonplaceholder.typicode.com/todos/1')\r\n          .then(response => response.json())\r\n          .then(json =>\r\n          this.setState({title: json.title, body:json.body}))\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h1 className=\"display-4\">test page</h1>\r\n                {this.state.title}\r\n                {this.state.body}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test","import React, {Component} from 'react';\nimport Contacts from './Components/Contact/Contacts';\nimport AddContact from './Components/Contact/AddContacts';\nimport EditContact from './Components/Contact/EditContact';\nimport Header from './Components/Layout/Header';\nimport About from './Components/Pages/About';\nimport NotFound from './Components/Pages/NotFound';\nimport Test from './Components/Tests/test';\nimport {HashRouter as Router, Route, Switch} from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport {Provider} from './Context'\n\nclass App extends Component{\n  render(){\n      return (\n      <Provider>\n          <Router>\n            <div className=\"App\">\n             <Header branding=\"Contact Manager\"/>\n               <div className=\"container\">\n                 <Switch>\n                   <Route exact path=\"/\" component={Contacts}/>\n                   <Route exact path=\"/contact/add\" component={AddContact}/>\n                   <Route exact path=\"/contact/edit/:id\" component={EditContact}/>\n                   <Route exact path=\"/about\" component={About}/>\n                   <Route exact path=\"/test\"  component={Test}/>\n                   <Route component={NotFound}/>\n                 </Switch>\n               </div>\n            </div>\n          </Router>\n      </Provider>\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}